spring.datasource.driver-class-name=org.h2.Driver
#Mode=MySQL permette l'uso di @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
#NON_KEYWORDS è utilizzato per escludere alcune parole presenti nelle tabelle di epas
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1;MODE=MySQL;NON_KEYWORDS=month,year,value,day
spring.datasource.username=sa
spring.datasource.password=sa

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=it.cnr.iit.epas.tests.OurH2Dialect

spring.main.allow-circular-references=true

# OAuth2 client configuration
spring.security.oauth2.client.registration.keycloak.client-id=epas-service
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/

# OAuth2 Provider configuration
spring.security.oauth2.client.provider.keyloak.issuer-uri=https://auth.iit.cnr.it/auth/realms/testing
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

#spring.security.oauth2.client.provider.keycloak.user-name-attribute=email
spring.security.oauth2.client.provider.keycloak.authorization-uri=https://auth.iit.cnr.it/auth/realms/testing/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=https://auth.iit.cnr.it/auth/realms/testing/protocol/openid-connect/token

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://auth.iit.cnr.it/auth/realms/testing

#logging
logging.level.it.cnr.iit.epas=DEBUG